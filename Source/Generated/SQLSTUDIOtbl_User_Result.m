/*
	SQLSTUDIOtbl_User_Result.h
	The implementation of properties and methods for the SQLSTUDIOtbl_User_Result object.
	Generated by SudzC.com
*/
#import "SQLSTUDIOtbl_User_Result.h"

@implementation SQLSTUDIOtbl_User_Result
	@synthesize Is_Admin = _Is_Admin;
	@synthesize Last_IP = _Last_IP;
	@synthesize Last_Login = _Last_Login;
	@synthesize Password = _Password;
	@synthesize User_Email = _User_Email;
	@synthesize User_ID = _User_ID;
	@synthesize User_Name = _User_Name;
	@synthesize User_Status = _User_Status;

	- (id) init
	{
		if(self = [super init])
		{
			self.Last_IP = nil;
			self.Last_Login = nil;
			self.Password = nil;
			self.User_Email = nil;
			self.User_Name = nil;

		}
		return self;
	}

	+ (SQLSTUDIOtbl_User_Result*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SQLSTUDIOtbl_User_Result*)[[[SQLSTUDIOtbl_User_Result alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Is_Admin = [[Soap getNodeValue: node withName: @"Is_Admin"] boolValue];
			self.Last_IP = [Soap getNodeValue: node withName: @"Last_IP"];
			self.Last_Login = [Soap dateFromString: [Soap getNodeValue: node withName: @"Last_Login"]];
			self.Password = [Soap getNodeValue: node withName: @"Password"];
			self.User_Email = [Soap getNodeValue: node withName: @"User_Email"];
			self.User_ID = [[Soap getNodeValue: node withName: @"User_ID"] intValue];
			self.User_Name = [Soap getNodeValue: node withName: @"User_Name"];
			self.User_Status = [[Soap getNodeValue: node withName: @"User_Status"] intValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"tbl_User_Result"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Is_Admin>%@</Is_Admin>", (self.Is_Admin)?@"true":@"false"];
		if (self.Last_IP != nil) [s appendFormat: @"<Last_IP>%@</Last_IP>", [[self.Last_IP stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Last_Login != nil) [s appendFormat: @"<Last_Login>%@</Last_Login>", [Soap getDateString: self.Last_Login]];
		if (self.Password != nil) [s appendFormat: @"<Password>%@</Password>", [[self.Password stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.User_Email != nil) [s appendFormat: @"<User_Email>%@</User_Email>", [[self.User_Email stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<User_ID>%@</User_ID>", [NSString stringWithFormat: @"%i", self.User_ID]];
		if (self.User_Name != nil) [s appendFormat: @"<User_Name>%@</User_Name>", [[self.User_Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<User_Status>%@</User_Status>", [NSString stringWithFormat: @"%i", self.User_Status]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SQLSTUDIOtbl_User_Result class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.Last_IP != nil) { [self.Last_IP release]; }
		if(self.Last_Login != nil) { [self.Last_Login release]; }
		if(self.Password != nil) { [self.Password release]; }
		if(self.User_Email != nil) { [self.User_Email release]; }
		if(self.User_Name != nil) { [self.User_Name release]; }
		[super dealloc];
	}

@end
